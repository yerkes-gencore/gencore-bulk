% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotGeneExpression.R
\name{plotGeneExpression}
\alias{plotGeneExpression}
\title{Return a simple ggplot boxplot of gene expression}
\usage{
plotGeneExpression(
  gene,
  grouping,
  groups,
  counts,
  metadata,
  subsetting,
  subsets,
  boxplot = TRUE,
  jitter = TRUE,
  axis_text_x = element_text(angle = 90, vjust = 0.5, hjust = 1)
)
}
\arguments{
\item{gene}{Gene to plot expression for}

\item{grouping}{Variable to group expression by. Must be a column of \code{metadata}}

\item{groups}{Optional specification of level ordering for grouping var}

\item{counts}{The expression data to plot}

\item{metadata}{The metadata to associate with the counts data}

\item{subsetting}{Optional variable to subset expression by. Must be a column of \code{metadata}}

\item{subsets}{Specification of levels to subset for}

\item{boxplot}{Boolean, plot \code{geom_boxplot}?}

\item{jitter}{Boolean, plot \code{geom_jitter}?}

\item{axis_text_x}{Option to modify X axis text. Default rotates labels 90
degrees}
}
\value{
A ggplot object
}
\description{
Returns a simple ggplot of gene expression, optionally with jitter or
boxplots overlayed. These are optional in case you want to do other
aesthetics. This is meant to be minimal so you can adjust the aesthetics
as necessary, but it can still be used as a quick check.

You can subset data using the \code{subsetting} and \code{subsets} arguments to focus
the plotting.
}
\examples{
\dontrun{

  ## With a limma model fit
  plotGeneExpression('MAMU-A', counts = model_fit$EList$E,
                      metadata = model_fit$targets, grouping = 'groupIDs')
  
  ## With a DESeq model
  plotGeneExpression('MAMU-A', counts = assay(assays(analysis$dds)$rld), 
                      metadata = colData(analysis$dds), grouping = 'groupIDs')
}

}
