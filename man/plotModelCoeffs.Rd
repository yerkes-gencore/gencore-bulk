% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotGeneExpression.R
\name{plotModelCoeffs}
\alias{plotModelCoeffs}
\title{Plot the results of a model fit}
\usage{
plotModelCoeffs(
  gene,
  numerator,
  denominator,
  counts,
  metadata,
  grouping,
  groups,
  subsetting,
  subsets,
  coefficients
)
}
\arguments{
\item{gene}{Gene to plot}

\item{numerator}{Full numerator of contrast, including all cancelled terms}

\item{denominator}{Full denominator of contrast, including all cancelled terms}

\item{counts}{The expression data to plot}

\item{metadata}{The metadata to associate with the counts data}

\item{grouping}{Variable to group expression by. Must be a column of \code{metadata}}

\item{groups}{Optional specification of level ordering for grouping var}

\item{subsetting}{Optional variable to subset expression by. Must be a column of \code{metadata}}

\item{subsets}{Specification of levels to subset for}

\item{coefficients}{Matrix of coefficients fit by model of your choice}
}
\value{
A ggplot object
}
\description{
Plots the expression, coefficients, and estimated change for a single gene and
contrast. You have to pass in a contrasts dataframe (or list) and specify which
contrast to use. See the example for details. The rest of the arguments get
passed to \code{plotGeneExpression}.
}
\details{
For example, if the question is:
"the results say JUNB has a significant increase in expression,
in Day 14 compared to day 0, does this seem to be true?"

Your numerator/denominator specification would look something like:
numerator = '(Intercept) + dayDay14', denominator = '(Intercept)'
}
\examples{
\dontrun{ 

contrast_matrix_expanded <- data.frame(
  contrast_names = 'P14_grp3vgrp2',
  numerators = '(Intercept) + grpgrp3',
  denominators = '(Intercept)')
  
model_plot('JUN', 
             counts = model_fit$EList$E, metadata = model_fit$targets,
             grouping = 'grp.day',
             subsetting = 'grp.day', subsets = c('grp2.P14', 'grp3.P14'),
             coefficients = limma_fit$fit$coefficients,
             numerator = '(Intercept) + grpgrp3',
             denominator = '(Intercept)')
}
}
